////多重背包问题Ⅰ
////有 N 种物品和一个容量是 V 的背包。
////第 i 种物品最多有 si 件，每件体积是 vi，价值是 wi。
////求解将哪些物品装入背包，可使物品体积总和不超过背包容量，且价值总和最大。
////输出最大价值。
////输入格式
////第一行两个整数，N，V，用空格隔开，分别表示物品种数和背包容积。
////接下来有 N 行，每行三个整数 vi, wi, si，用空格隔开，分别表示第 i 种物品的体积、价值和数量。
//#include<iostream>
//#include<vector>
//
//using namespace std;
//
//int maxValue(vector<int>v, vector<int>w, vector<int>s,int V)
//{
//	vector<int> f(V + 1);
//	for (int i = 0; i < v.size(); i++)
//	{
//		for (int j = V; j >= v[i]; j--)
//		{
//			for (int k = 1; k <= s[i] && k<=j/v[i]; k++)
//			{
//				f[j] = max(f[j],f[j-k*v[i]]+k*w[i]);
//			}
//		}
//	}
//	return f[V];
//}
//
//int main()
//{
//	int N=4, V=5;
//	vector<int> v(N), w(N), s(N),f(V+1);
//	v = {1,2,3,4};
//	w = {2,4,4,5};
//	s = {3,1,3,2};
//	cout << maxValue(v, w, s, V)<< endl;
//	return 0;
//}